@use 'variables' as v;
@use "sass:color";

/** Media Queries **/
@mixin telefono {
    @media (min-width: v.$telefono) {
        @content;
    }
}
@mixin tablet {
    @media (min-width: v.$tablet) {
        @content;
    }
}
@mixin desktop {
    @media (min-width: v.$desktop) {
        @content;
    }
}
@mixin xl_desktop {
    @media (min-width: v.$xl_desktop) {
        @content;
    }
}

@mixin boton($bgColor, $colorTexto) {
    background-color: $bgColor;
    padding: 1.5rem 4rem;
    color: $colorTexto;
    font-size: 1.8rem;
    font-weight: 700;
    border: none;
    transition-property: background-color;
    transition-duration: .3s;
    text-align: center;
    width: 100%;
    display: inline-block;

    &:hover {   
        background-color: color.adjust( $bgColor, $lightness: -10% );
        cursor: pointer;
    }
}

@mixin grid($columnas, $espaciado ) {
    display: grid;
    gap: $espaciado;
    grid-template-columns: repeat($columnas, 1fr);
}

@mixin contenedor {
    //cuando la anchura no pueda ser mínimo 120rem,
    //aplicará mínimo 95% para la anchura.
    width: min(95%, 140rem);
    margin: 0 auto;
}

@mixin contenedor-sm {
    //cuando la anchura no pueda ser mínimo 120rem,
    //aplicará mínimo 95% para la anchura.
    width: min(95%, 60rem);
    margin: 0 auto;
}

//para los h1 h2 h3 en _tipografia.scss
@mixin headings {
    font-family: v.$fuente_principal;
    font-weight: v.$black;
    margin: 2rem 0;
}

//hereda de headings con @include y agrega más
@mixin nombre-pagina {
    @include headings;
    margin: 6rem 0 3rem 0;
    text-align: center;
}

//clamp(), requiere tamaño mínimo y máximo del texto,
//el tamaño intermedio lo calcula automaticamente
@mixin texto-fluido($min, $max) {
    font-size: clamp($min, -0.8rem + 10vw, $max);
}

//requiere un color inicio y color final para gradient
@mixin texto-degradado($inicio, $final) {
    //aplica el gradiante al contenedor
    background: linear-gradient(to right, $inicio, $final);
    //pasa background gradiante al texto
    background-clip: text;
    //hace el texto transparente para que se vea el background
    color: transparent;
}

@mixin logo {
    color: v.$blanco;
    text-align: center;
    margin-bottom: 2rem;
    @include desktop {
        text-align: left;
        margin: 0;
    }
}

//recibe color y tamaño
@mixin menu-social($color, $size) {

    //aplica los elementos cuya clase contenga __enlace
    &__enlace {

        //estilo css a lo que este antes del elemento
        //cuya clase incluya __enlace (los iconos)
        &::before {
            color: $color;
            size: $size;
            display: inline-block;
            font-style: normal;
            //aplica a los iconos vectoriales
            text-rendering: auto;
            -webkit-font-smoothing: antialiased;
            //iconos vectoriales
            font-family: "Font Awesome 6 Brands";
        }

        //selecciona elemento cuya clase contiene __enlace y
        //(&) su href contiene "https://facebook.com", 
        //antes del elemento inserta el icono 
        &[href*="https://facebook.com"]::before {
            content: "\f39e";
        }
        &[href*="https://github.com"]::before {
            content: "\f09b";
        }
        &[href*="https://tiktok.com"]::before {
            content: "\e07b";
        }
        &[href*="https://instagram.com"]::before {
            content: "\f16d";
        }
        &[href*="https://youtube.com"]::before {
            content: "\f167";
        }
        &[href*="https://twitter.com"]::before {
            content: "\f099";
        }
    }

    //oculta elemento cuya clase contenga __ocultar
    &__ocultar {
        display: none;
    }

}